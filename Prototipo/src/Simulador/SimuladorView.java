/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Simulador;

import Network.BitMap;
import java.io.File;
import java.io.FileInputStream;
import java.io.ObjectInputStream;
import java.util.Arrays;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Igor Siqueira
 */
public class SimuladorView extends javax.swing.JFrame {

    /**
     * Creates new form Simulador
     */
    public SimuladorView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAcao = new javax.swing.JPanel();
        btnFull = new javax.swing.JButton();
        btnRealTrafficModule = new javax.swing.JButton();
        btnAnalyseModule = new javax.swing.JButton();
        btnOnlineModule = new javax.swing.JButton();
        btnViewBitmap = new javax.swing.JButton();
        panelCorpo = new javax.swing.JPanel();
        panelParametros = new javax.swing.JPanel();
        txtStartTime = new javax.swing.JTextField();
        labelStartTime = new javax.swing.JLabel();
        labelEndTime = new javax.swing.JLabel();
        txtEndTime = new javax.swing.JTextField();
        label = new javax.swing.JLabel();
        txtEntrada = new javax.swing.JTextField();
        btnBrowseEntrada = new javax.swing.JButton();
        labelBitmaps = new javax.swing.JLabel();
        txtBitmaps = new javax.swing.JTextField();
        btnBrowseBitmap = new javax.swing.JButton();
        labelSaidas = new javax.swing.JLabel();
        txtSaidas = new javax.swing.JTextField();
        btnBrowseSaidas = new javax.swing.JButton();
        labelSwitches = new javax.swing.JLabel();
        cmbSwitches = new javax.swing.JComboBox();
        labelBitmapSize = new javax.swing.JLabel();
        labelBitmpaThreshold = new javax.swing.JLabel();
        txtBitmapSize = new javax.swing.JTextField();
        txtBitmapThreshold = new javax.swing.JTextField();
        labelPacketsFields = new javax.swing.JLabel();
        txtPacketsFields = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelAcao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelAcao.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.TRAILING));

        btnFull.setText("Full");
        btnFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFullActionPerformed(evt);
            }
        });
        panelAcao.add(btnFull);

        btnRealTrafficModule.setText("Real Analyse");
        btnRealTrafficModule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealTrafficModuleActionPerformed(evt);
            }
        });
        panelAcao.add(btnRealTrafficModule);

        btnAnalyseModule.setText("Analyse Module");
        btnAnalyseModule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyseModuleActionPerformed(evt);
            }
        });
        panelAcao.add(btnAnalyseModule);

        btnOnlineModule.setText("Online Module");
        btnOnlineModule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOnlineModuleActionPerformed(evt);
            }
        });
        panelAcao.add(btnOnlineModule);

        btnViewBitmap.setText("ViewBitmap");
        btnViewBitmap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBitmapActionPerformed(evt);
            }
        });
        panelAcao.add(btnViewBitmap);

        panelCorpo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        panelParametros.setBorder(javax.swing.BorderFactory.createTitledBorder("Par√¢metros"));

        txtStartTime.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtStartTime.setText("0");
        txtStartTime.setNextFocusableComponent(txtEndTime);
        txtStartTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStartTimeActionPerformed(evt);
            }
        });

        labelStartTime.setText("Start Time:");

        labelEndTime.setText("End Time:");

        txtEndTime.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtEndTime.setText("60");
        txtEndTime.setNextFocusableComponent(labelStartTime);
        txtEndTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEndTimeFocusLost(evt);
            }
        });

        label.setText("Entrada:");

        txtEntrada.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtEntrada.setText("D:\\Mestrado\\Prototipo\\Trace\\Manual");
        txtEntrada.setEnabled(false);
        txtEntrada.setNextFocusableComponent(txtEndTime);

        btnBrowseEntrada.setText("...");
        btnBrowseEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseEntradaActionPerformed(evt);
            }
        });

        labelBitmaps.setText("Bitmaps:");

        txtBitmaps.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtBitmaps.setText("D:\\Mestrado\\Prototipo\\Bitmaps");
        txtBitmaps.setEnabled(false);
        txtBitmaps.setNextFocusableComponent(txtEndTime);
        txtBitmaps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBitmapsActionPerformed(evt);
            }
        });

        btnBrowseBitmap.setText("...");
        btnBrowseBitmap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseBitmapActionPerformed(evt);
            }
        });

        labelSaidas.setText("Saidas:");

        txtSaidas.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtSaidas.setText("D:\\Mestrado\\Prototipo\\Simulations");
        txtSaidas.setEnabled(false);
        txtSaidas.setNextFocusableComponent(txtEndTime);

        btnBrowseSaidas.setText("...");
        btnBrowseSaidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseSaidasActionPerformed(evt);
            }
        });

        labelSwitches.setText("Switches:");

        cmbSwitches.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "4", "8", "16", "32", "64" }));

        labelBitmapSize.setText("Bitmap Size:");

        labelBitmpaThreshold.setText("Bitmap Threshold:");

        txtBitmapSize.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtBitmapSize.setText("2048");

        txtBitmapThreshold.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtBitmapThreshold.setText("50");
        txtBitmapThreshold.setNextFocusableComponent(labelStartTime);
        txtBitmapThreshold.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBitmapThresholdFocusLost(evt);
            }
        });

        labelPacketsFields.setText("Packets Fields:");

        txtPacketsFields.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPacketsFields.setText("7");
        txtPacketsFields.setNextFocusableComponent(labelStartTime);

        javax.swing.GroupLayout panelParametrosLayout = new javax.swing.GroupLayout(panelParametros);
        panelParametros.setLayout(panelParametrosLayout);
        panelParametrosLayout.setHorizontalGroup(
            panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelParametrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelBitmapSize)
                        .addComponent(labelStartTime, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(labelSwitches, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelSaidas, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelBitmaps, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtEntrada)
                    .addComponent(txtBitmaps, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSaidas, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelParametrosLayout.createSequentialGroup()
                        .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbSwitches, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtBitmapSize, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtStartTime, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelParametrosLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelEndTime, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelBitmpaThreshold, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelParametrosLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(labelPacketsFields)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEndTime)
                            .addComponent(txtBitmapThreshold)
                            .addComponent(txtPacketsFields))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBrowseSaidas)
                    .addComponent(btnBrowseBitmap)
                    .addComponent(btnBrowseEntrada))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelParametrosLayout.setVerticalGroup(
            panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelParametrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label)
                    .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBitmaps)
                    .addComponent(txtBitmaps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseBitmap, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSaidas)
                    .addComponent(txtSaidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseSaidas, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSwitches)
                    .addComponent(cmbSwitches, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPacketsFields)
                    .addComponent(txtPacketsFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelStartTime)
                    .addComponent(txtStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEndTime)
                    .addComponent(txtEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBitmapSize)
                    .addComponent(txtBitmapSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBitmpaThreshold)
                    .addComponent(txtBitmapThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelCorpoLayout = new javax.swing.GroupLayout(panelCorpo);
        panelCorpo.setLayout(panelCorpoLayout);
        panelCorpoLayout.setHorizontalGroup(
            panelCorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelParametros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelCorpoLayout.setVerticalGroup(
            panelCorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCorpoLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(panelParametros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelAcao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelCorpo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(panelCorpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(panelAcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewBitmapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBitmapActionPerformed
        //System.out.println("Loading Bitmaps from Source Switch (Id: " + sourceId + ")");
        File diretorio = new File(txtBitmaps.getText());
        File files[] = diretorio.listFiles();

        listFiles(files);

    }//GEN-LAST:event_btnViewBitmapActionPerformed

    private void btnBrowseSaidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseSaidasActionPerformed
        JFileChooser fc = new JFileChooser();

        fc.setCurrentDirectory(new File(txtSaidas.getText()));
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int res = fc.showOpenDialog(null);

        if (res == JFileChooser.APPROVE_OPTION) {
            File diretorio = fc.getSelectedFile();
            txtSaidas.setText(diretorio.getAbsolutePath());
        }
    }//GEN-LAST:event_btnBrowseSaidasActionPerformed

    private void btnBrowseBitmapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseBitmapActionPerformed
        JFileChooser fc = new JFileChooser();

        fc.setCurrentDirectory(new File(txtBitmaps.getText()));
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int res = fc.showOpenDialog(null);

        if (res == JFileChooser.APPROVE_OPTION) {
            File diretorio = fc.getSelectedFile();
            txtBitmaps.setText(diretorio.getAbsolutePath());
        }
    }//GEN-LAST:event_btnBrowseBitmapActionPerformed

    private void btnBrowseEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseEntradaActionPerformed
        JFileChooser fc = new JFileChooser();

        fc.setCurrentDirectory(new File(txtEntrada.getText()));
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int res = fc.showOpenDialog(null);

        if (res == JFileChooser.APPROVE_OPTION) {
            File diretorio = fc.getSelectedFile();
            txtEntrada.setText(diretorio.getAbsolutePath());
        }
    }//GEN-LAST:event_btnBrowseEntradaActionPerformed

    private void txtEndTimeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEndTimeFocusLost
//        Instance.setEndTime((Long) Long.parseLong(txtEndTime.getText()));
    }//GEN-LAST:event_txtEndTimeFocusLost

    private void txtBitmapThresholdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBitmapThresholdFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBitmapThresholdFocusLost

    private void txtStartTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStartTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStartTimeActionPerformed

    private void btnFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFullActionPerformed
        btnOnlineModule.doClick();
        btnAnalyseModule.doClick();
        btnRealTrafficModule.doClick();
    }//GEN-LAST:event_btnFullActionPerformed

    private void btnRealTrafficModuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealTrafficModuleActionPerformed
        Date dataInicio = new Date();
        System.out.println("Come√ßou em: " + dataInicio);
//        Instance.setBitMapSize(Integer.parseInt(txtBitmapSize.getText()));
//        Instance.setBitMapThreshold(Integer.parseInt(txtBitmapThreshold.getText()));
//        Instance.setBitmapDir(txtBitmaps.getText());
//        Instance.setEntradasDir(txtEntrada.getText());
//        Instance.setSaidasDir(txtSaidas.getText());
//        Instance.setStartTime((Long) Long.parseLong(txtStartTime.getText()));
//        Instance.setEndTime((Long) Long.parseLong(txtEndTime.getText()));
//        Instance.setNumberOfPacketFields(Integer.parseInt(txtPacketsFields.getText()));
//        Instance.setNumberOfSwitches(Integer.parseInt((String) cmbSwitches.getSelectedItem()));
        try {
//            new FullMeshDataAnalysis().realAnalyse();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        Date dataFim = new Date();
        System.out.println("Terminou em: " + dataFim);;
    }//GEN-LAST:event_btnRealTrafficModuleActionPerformed

    private void btnAnalyseModuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyseModuleActionPerformed
        Date dataInicio = new Date();
        System.out.println("Come√ßou em: " + dataInicio);
//        Instance.setBitMapSize(Integer.parseInt(txtBitmapSize.getText()));
//        Instance.setBitMapThreshold(Integer.parseInt(txtBitmapThreshold.getText()));
//        Instance.setBitmapDir(txtBitmaps.getText());
//        Instance.setEntradasDir(txtEntrada.getText());
//        Instance.setSaidasDir(txtSaidas.getText());
//        Instance.setStartTime((Long) Long.parseLong(txtStartTime.getText()));
//        Instance.setEndTime((Long) Long.parseLong(txtEndTime.getText()));
//        Instance.setNumberOfPacketFields(Integer.parseInt(txtPacketsFields.getText()));
//        Instance.setNumberOfSwitches(Integer.parseInt((String) cmbSwitches.getSelectedItem()));
        try {
//            new IngressEgressDataAnalysis().simulateBitmapAnalyse();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        Date dataFim = new Date();
        System.out.println("Terminou em: " + dataFim);
    }//GEN-LAST:event_btnAnalyseModuleActionPerformed

    private void btnOnlineModuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOnlineModuleActionPerformed
        try {
//            Instance.setBitMapSize(Integer.parseInt(txtBitmapSize.getText()));
//            Instance.setBitMapThreshold(Integer.parseInt(txtBitmapThreshold.getText()));
//            Instance.setBitmapDir(txtBitmaps.getText());
//            Instance.setEntradasDir(txtEntrada.getText());
//            Instance.setSaidasDir(txtSaidas.getText());
//            Instance.setStartTime((Long) Long.parseLong(txtStartTime.getText()));
//            Instance.setEndTime((Long) Long.parseLong(txtEndTime.getText()));
//            Instance.setNumberOfPacketFields(Integer.parseInt(txtPacketsFields.getText()));
//            Instance.setNumberOfSwitches(Integer.parseInt((String) cmbSwitches.getSelectedItem()));

//            OnlineDataStreamFactory.createIngressEgressModule().simulate();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao realizar Parse");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnOnlineModuleActionPerformed

    private void txtBitmapsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBitmapsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBitmapsActionPerformed

    private void listFiles(File[] files) {
        Arrays.sort(files);
        for (File file : files) {
            if (file.isDirectory()) {
                listFiles(file.listFiles());
            } else {
                try {
                    FileInputStream fin = new FileInputStream(file);
                    ObjectInputStream ois = new ObjectInputStream(fin);
                    BitMap bitMap = (BitMap) ois.readObject();
                    System.out.println("----------------------------------");
                    System.out.println("Bitmap: " + file.getAbsolutePath());
                    System.out.println("occupancy: " + bitMap.occupancy());
                    System.out.println("packets  : " + bitMap.getNumberOfPackets());
                    System.out.println("Colisions: " + bitMap.getNumberOfColisions());
                    ois.close();
                    fin.close();
                } catch (Exception ex) {

                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimuladorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimuladorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimuladorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimuladorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SimuladorView simulador = new SimuladorView();
//                Instance.setBitMapSize(Integer.parseInt(simulador.txtBitmapSize.getText()));
//                Instance.setBitMapThreshold(Integer.parseInt(simulador.txtBitmapThreshold.getText()));
//                Instance.setBitmapDir(simulador.txtBitmaps.getText());
//                Instance.setEntradasDir(simulador.txtEntrada.getText());
//                Instance.setSaidasDir(simulador.txtSaidas.getText());
//                Instance.setStartTime((Long) Long.parseLong(simulador.txtStartTime.getText()));
//                Instance.setEndTime((Long) Long.parseLong(simulador.txtEndTime.getText()));
//                Instance.setNumberOfPacketFields(Integer.parseInt(simulador.txtPacketsFields.getText()));
//                Instance.setNumberOfSwitches(Integer.parseInt((String) simulador.cmbSwitches.getSelectedItem()));
                simulador.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalyseModule;
    private javax.swing.JButton btnBrowseBitmap;
    private javax.swing.JButton btnBrowseEntrada;
    private javax.swing.JButton btnBrowseSaidas;
    private javax.swing.JButton btnFull;
    private javax.swing.JButton btnOnlineModule;
    private javax.swing.JButton btnRealTrafficModule;
    private javax.swing.JButton btnViewBitmap;
    private javax.swing.JComboBox cmbSwitches;
    private javax.swing.JLabel label;
    private javax.swing.JLabel labelBitmapSize;
    private javax.swing.JLabel labelBitmaps;
    private javax.swing.JLabel labelBitmpaThreshold;
    private javax.swing.JLabel labelEndTime;
    private javax.swing.JLabel labelPacketsFields;
    private javax.swing.JLabel labelSaidas;
    private javax.swing.JLabel labelStartTime;
    private javax.swing.JLabel labelSwitches;
    private javax.swing.JPanel panelAcao;
    private javax.swing.JPanel panelCorpo;
    private javax.swing.JPanel panelParametros;
    private javax.swing.JTextField txtBitmapSize;
    private javax.swing.JTextField txtBitmapThreshold;
    private javax.swing.JTextField txtBitmaps;
    private javax.swing.JTextField txtEndTime;
    private javax.swing.JTextField txtEntrada;
    private javax.swing.JTextField txtPacketsFields;
    private javax.swing.JTextField txtSaidas;
    private javax.swing.JTextField txtStartTime;
    // End of variables declaration//GEN-END:variables
}
